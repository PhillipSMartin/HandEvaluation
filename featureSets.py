# -*- coding: utf-8 -*-
"""
Created on Wed May 26 17:43:06 2021

@author: sarab
"""
import pandas as pd

global featureSets

featureSets = { 'flat' : # 4333 or 4432
    { 'feature_names' : ['AK',
        'AQ',
        'AJ',
        'AT',
        'Ax',
        'KQ',
        'KJ',
        'KT',
        'Kx',
        'QJ',
        'QT',
        'Qx',
        'JT',
        'Jx',
        'Tx',
        'xx',
        'AKQ',
        'AKJ',
        'AKT',
        'AKx',
        'AQJ',
        'AQT',
        'AQx',
        'AJT',
        'AJx',
        'ATx',
        'Axx',
        'KQJ',
        'KQT',
        'KQx',
        'KJT',
        'KJx',
        'KTx',
        'Kxx',
        'QJT',
        'QJx',
        'QTx',
        'Qxx',
        'JTx',
        'Jxx',
        'Txx',
        'xxx',
        'AKQJ',
        'AKQT',
        'AKQx',
        'AKJT',
        'AKJx',
        'AKTx',
        'AKxx',
        'AQJT',
        'AQJx',
        'AQTx',
        'AQxx',
        'AJTx',
        'AJxx',
        'ATxx',
        'Axxx',
        'KQJT',
        'KQJx',
        'KQTx',
        'KQxx',
        'KJTx',
        'KJxx',
        'KTxx',
        'Kxxx',
        'QJTx',
        'QJxx',
        'QTxx',
        'Qxxx',
        'JTxx',
        'Jxxx',
        'Txxx',
        'xxxx',
        '4333'],
     'first_special_feature' : -1,  # first feature that cannot be determined by a string search
     'fixed_features' : [],         # features for which we do not wish to adjust the weights
     'features_ordered_by_high_cards': [range(4, -1, -1),
        range(8, 4, -1),
        range(11, 8, -1),
        range(15, 11, -1),
        range(19, 15, -1),
        range(22, 19, -1),
        range(26, 22, -1),
        range(29, 26, -1),
        range(33, 29, -1),
        range(37, 33, -1),
        range(41, 37, -1),
        range(48, 41, -1),
        range(52, 48, -1),
        range(56, 52, -1),
        range(60, 56, -1),
        range(64, 60, -1),
        range(68, 64, -1),
        range(72, 68, -1),
        range(73, 72, -1)],
    'features_ordered_by_length' : [[0, 19, 48],
        [1, 22, 52],
        [2, 24, 54],
        [3, 25, 55],
        [4, 26, 56],
        [5, 29, 60],
        [6, 31, 62],
        [7, 32, 63],
        [8, 33, 64],
        [9, 35, 66],
        [10, 36, 67],
        [11, 37, 68],
        [12, 38, 69],
        [13, 39, 70],
        [14, 40, 71],
        [15, 41, 72],
        [16, 44],
        [17, 46],
        [18, 47],
        [20, 50],
        [21, 51],
        [23, 53],
        [27, 58],
        [28, 59],
        [30, 61],
        [34, 65],
        [42],
        [43],
        [45],
        [49],
        [57],
        [73]],
     'default_vectors' : pd.DataFrame({ 'Vector': [[14, 12, 10, 8, 8, 10, 8, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            18, 16, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            0],
        [30, 25, 21, 18, 18, 19, 15, 12, 12, 10, 7, 7, 3, 3, 0, 0, 
            37, 33, 30, 30, 28, 25, 25, 21, 21, 18, 18, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            0],
        [22, 18, 15, 14, 13, 14, 11, 10, 9, 5, 5, 4, 2, 1, 0, 0, 
            28, 25, 24, 23, 21, 20, 19, 17, 16, 14, 13, 17, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 2, 1, 0, 0, 
            31, 30, 29, 27, 26, 24, 23, 23, 21, 20, 19, 17, 16, 15, 13, 19, 18, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 3, 2, 0, 0, 
            0],
        [10, 8, 7, 6, 6, 6, 5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 
            12, 11, 10, 10, 9, 8, 8, 7, 7, 6, 6, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            0],
        [128, 94, 85, 78, 76, 70, 61, 54, 52, 22, 15, 13, 8, 4, 2, 0, 
             174, 158, 153, 142, 132, 127, 116, 106, 95, 87, 84, 106, 101, 90, 80, 69, 61, 58, 49, 38, 30, 27, 12, 6, 3, 0, 
             200, 200, 192, 182, 174, 169, 156, 154, 146, 141, 128, 118, 105, 96, 92, 126, 118, 113, 100, 90, 77, 68, 64, 57, 44, 35, 31, 16, 8, 4, 0, 
             -10],
        [22, 18, 15, 14, 13, 11,  8, 10,  9,  4,  3,  2,  0, -1,  1,  0, 
            27, 24, 23, 22, 20, 19, 18, 16, 15, 14, 13, 16, 15, 14, 12, 11, 10,  9, 8,  7,  6,  5,  3,  2,  1,  0, 
            32, 31, 30, 28, 27, 26, 22, 24, 23, 22, 18, 19, 15, 14, 13, 20, 19, 18, 14, 15, 11, 10,  9, 11,  7,  6, 5,  3,  2,  1,  0, 
            0]
       ],
        'Classification_threshold': [50, 100, 75, 32, 500, 75],
        'Vul_threshold': 0,
        'Nv_threshold': 0,
        'Accuracy': 0.0,
        'Expectation': 0.0 }, index=['Work',
            'Woolsey',
            'Kleinman',
            'Schenken',
            'KnR',
            'Bergen'])
        },
'balanced' : # 4333, 4432, or 5332
    { 'feature_names' : ['AK',
        'AQ',
        'AJ',
        'AT',
        'Ax',
        'KQ',
        'KJ',
        'KT',
        'Kx',
        'QJ',
        'QT',
        'Qx',
        'JT',
        'Jx',
        'Tx',
        'xx',
        'AKQ',
        'AKJ',
        'AKT',
        'AKx',
        'AQJ',
        'AQT',
        'AQx',
        'AJT',
        'AJx',
        'ATx',
        'Axx',
        'KQJ',
        'KQT',
        'KQx',
        'KJT',
        'KJx',
        'KTx',
        'Kxx',
        'QJT',
        'QJx',
        'QTx',
        'Qxx',
        'JTx',
        'Jxx',
        'Txx',
        'xxx',
        'AKQJ',
        'AKQT',
        'AKQx',
        'AKJT',
        'AKJx',
        'AKTx',
        'AKxx',
        'AQJT',
        'AQJx',
        'AQTx',
        'AQxx',
        'AJTx',
        'AJxx',
        'ATxx',
        'Axxx',
        'KQJT',
        'KQJx',
        'KQTx',
        'KQxx',
        'KJTx',
        'KJxx',
        'KTxx',
        'Kxxx',
        'QJTx',
        'QJxx',
        'QTxx',
        'Qxxx',
        'JTxx',
        'Jxxx',
        'Txxx',
        'xxxx',
        'AKQJT',
        'AKQJx',
        'AKQTx',
        'AKQxx',
        'AKJTx',
        'AKJxx',
        'AKTxx',
        'AKxxx',
        'AQJTx',
        'AQJxx',
        'AQTxx',
        'AQxxx',
        'AJTxx',
        'AJxxx',
        'ATxxx',
        'Axxxx',
        'KQJTx',
        'KQJxx',
        'KQTxx',
        'KQxxx',
        'KJTxx',
        'KJxxx',
        'KTxxx',
        'Kxxxx',
        'QJTxx',
        'QJxxx',
        'QTxxx',
        'Qxxxx',
        'JTxxx',
        'Jxxxx',
        'Txxxx',
        'xxxxx',
        '4333'],
     'first_special_feature' : -1,  # first feature that cannot be determined by a string search
     'fixed_features' : [],         # features for which we do not wish to adjust the weights
     'features_ordered_by_high_cards': [range(4, -1, -1),
        range(8, 4, -1),
        range(11, 8, -1),
        range(15, 11, -1),
        range(19, 15, -1),
        range(22, 19, -1),
        range(26, 22, -1),
        range(29, 26, -1),
        range(33, 29, -1),
        range(37, 33, -1),
        range(41, 37, -1),
        range(48, 41, -1),
        range(52, 48, -1),
        range(56, 52, -1),
        range(60, 56, -1),
        range(64, 60, -1),
        range(68, 64, -1),
        range(72, 68, -1),
        range(76, 72, -1),
        range(80, 76, -1),
        range(84, 80, -1),
        range(88, 84, -1),
        range(92, 88, -1),
        range(96, 92, -1),
        range(100, 96, -1),
        range(104, 100, -1),
        range(105, 104, -1),
        range(106, 105, -1)],
    'features_ordered_by_length' : [[0, 19, 48, 80],
        [1, 22, 52, 84],
        [2, 24, 54, 86],
        [3, 25, 55, 87],
        [4, 26, 56, 88],
        [5, 29, 60, 92],
        [6, 31, 62, 94],
        [7, 32, 63, 95],
        [8, 33, 64, 96],
        [9, 35, 66, 98],
        [10, 36, 67, 99],
        [11, 37, 68, 100],
        [12, 38, 69, 101],
        [13, 39, 70, 102],
        [14, 40, 71, 103],
        [15, 41, 72, 104],
        [16, 44, 76],
        [17, 46, 78],
        [18, 47, 79],
        [20, 50, 82],
        [21, 51, 83],
        [23, 53, 85],
        [27, 58, 90],
        [28, 59, 91],
        [30, 61, 93],
        [34, 65, 97],
        [42, 74],
        [43, 75],
        [45, 77],
        [49, 81],
        [57, 89],
        [73],
        [105]],
     'default_vectors' : pd.DataFrame({ 'Vector': [[14, 12, 10, 8, 8, 10, 8, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            18, 16, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            0],
         [30, 25, 21, 18, 18, 19, 15, 12, 12, 10, 7, 7, 3, 3, 0, 0, 
            37, 33, 30, 30, 28, 25, 25, 21, 21, 18, 18, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            0],
        [22, 18, 15, 14, 13, 14, 11, 10, 9, 5, 5, 4, 2, 1, 0, 0, 
            28, 25, 24, 23, 21, 20, 19, 17, 16, 14, 13, 17, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 2, 1, 0, 0, 
            31, 30, 29, 27, 26, 24, 23, 23, 21, 20, 19, 17, 16, 15, 13, 19, 18, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 3, 2, 0, 0, 
            34, 33, 31, 30, 28, 27, 25, 24, 24, 23, 21, 20, 18, 17, 15, 14, 19, 19, 17, 16, 14, 13, 11, 10, 9, 8, 7, 5, 3, 2, 0, 0, 
            0],
        [10, 8, 7, 6, 6, 6, 5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 
            12, 11, 10, 10, 9, 8, 8, 7, 7, 6, 6, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            0],
        [128, 94, 85, 78, 76, 70, 61, 54, 52, 22, 15, 13, 8, 4, 2, 0, 
            174, 158, 153, 142, 132, 127, 116, 106, 95, 87, 84, 106, 101, 90, 80, 69, 61, 58, 49, 38, 30, 27, 12, 6, 3, 0, 
            200, 200, 192, 182, 174, 169, 156, 154, 146, 141, 128, 118, 105, 96, 92, 126, 118, 113, 100, 90, 77, 68, 64, 57, 44, 35, 31, 16, 8, 4, 0, 
            230, 220, 220, 210, 200, 190, 185, 170, 170, 160, 155, 140, 130, 115, 105, 100, 140, 130, 125, 110, 100, 85, 75, 70, 65, 65, 40, 35, 20, 10, 5, 0, 
            -10],
        [22, 18, 15, 14, 13, 11,  8, 10,  9,  4,  3,  2,  0, -1,  1,  0, 
            27, 24, 23, 22, 20, 19, 18, 16, 15, 14, 13, 16, 15, 14, 12, 11, 10,  9, 8,  7,  6,  5,  3,  2,  1,  0, 
            32, 31, 30, 28, 27, 26, 22, 24, 23, 22, 18, 19, 15, 14, 13, 20, 19, 18, 14, 15, 11, 10,  9, 11,  7,  6, 5,  3,  2,  1,  0, 
            36, 35, 34, 33, 31, 30, 29, 25, 27, 26, 25, 21, 22, 18, 17, 16, 23, 22, 21, 17, 18, 14, 13, 12, 14, 10,  9,  8,  6, 5,  4,  3,
            0]
        [13, 11, 9, 8, 8, 9, 7, 6, 6, 5, 4, 4, 2, 2, 0, 0, 
            17, 15, 14, 13, 13, 12, 12, 11, 10, 9, 8, 11, 10, 10, 9, 8, 7, 6, 5, 5, 5, 4, 2, 2, 0, 0, 
            18, 17, 17, 16, 15, 14, 13, 14, 13, 12, 12, 11, 10, 9, 8, 12, 11, 10, 10, 9, 8, 7, 6, 5, 5, 5, 4, 2, 2, 0, 0, 
            18, 17, 17, 16, 15, 14, 13, 14, 13, 12, 12, 11, 10, 9, 8, 12, 11, 10, 10, 9, 8, 7, 6, 5, 5, 5, 4, 2, 2, 0, 0, 
            0]
        ],
        'Classification_threshold': [50, 100, 75, 32, 500, 75, 50],
        'Vul_threshold': 0,
        'Nv_threshold': 0,
        'Accuracy': 0.0,
        'Expectation': 0.0 }, index=['Work',
            'Woolsey',
            'Kleinman',
            'Schenken',
            'KnR',
            'Bergen',
            'Optimized'])
        },
'semi-balanced' :  # includes 6332 and 5422
    { 'feature_names' : ['AK',
        'AQ',
        'AJ',
        'AT',
        'Ax',
        'KQ',
        'KJ',
        'KT',
        'Kx',
        'QJ',
        'QT',
        'Qx',
        'JT',
        'Jx',
        'Tx',
        'xx',
        'AKQ',
        'AKJ',
        'AKT',
        'AKx',
        'AQJ',
        'AQT',
        'AQx',
        'AJT',
        'AJx',
        'ATx',
        'Axx',
        'KQJ',
        'KQT',
        'KQx',
        'KJT',
        'KJx',
        'KTx',
        'Kxx',
        'QJT',
        'QJx',
        'QTx',
        'Qxx',
        'JTx',
        'Jxx',
        'Txx',
        'xxx',
        'AKQJ',
        'AKQT',
        'AKQx',
        'AKJT',
        'AKJx',
        'AKTx',
        'AKxx',
        'AQJT',
        'AQJx',
        'AQTx',
        'AQxx',
        'AJTx',
        'AJxx',
        'ATxx',
        'Axxx',
        'KQJT',
        'KQJx',
        'KQTx',
        'KQxx',
        'KJTx',
        'KJxx',
        'KTxx',
        'Kxxx',
        'QJTx',
        'QJxx',
        'QTxx',
        'Qxxx',
        'JTxx',
        'Jxxx',
        'Txxx',
        'xxxx',
        'AKQJT',
        'AKQJx',
        'AKQTx',
        'AKQxx',
        'AKJTx',
        'AKJxx',
        'AKTxx',
        'AKxxx',
        'AQJTx',
        'AQJxx',
        'AQTxx',
        'AQxxx',
        'AJTxx',
        'AJxxx',
        'ATxxx',
        'Axxxx',
        'KQJTx',
        'KQJxx',
        'KQTxx',
        'KQxxx',
        'KJTxx',
        'KJxxx',
        'KTxxx',
        'Kxxxx',
        'QJTxx',
        'QJxxx',
        'QTxxx',
        'Qxxxx',
        'JTxxx',
        'Jxxxx',
        'Txxxx',
        'xxxxx',
        'AKQJTx',
        'AKQJxx',
        'AKQTxx',
        'AKQxxx',
        'AKJTxx',
        'AKJxxx',
        'AKTxxx',
        'AKxxxx',
        'AQJTxx',
        'AQJxxx',
        'AQTxxx',
        'AQxxxx',
        'AJTxxx',
        'AJxxxx',
        'ATxxxx',
        'Axxxxx',
        'KQJTxx',
        'KQJxxx',
        'KQTxxx',
        'KQxxxx',
        'KJTxxx',
        'KJxxxx',
        'KTxxxx',
        'Kxxxxx',
        'QJTxxx',
        'QJxxxx',
        'QTxxxx',
        'Qxxxxx',
        'JTxxxx',
        'Jxxxxx',
        'Txxxxx',
        'xxxxxx',
        '5422',
        '4333'],
     'first_special_feature' : -2,  # first feature that cannot be determined by a string search
     'fixed_features' : [],         # features for which we do not wish to adjust the weights
     'features_ordered_by_high_cards': [range(4, -1, -1),
        range(8, 4, -1),
        range(11, 8, -1),
        range(15, 11, -1),
        range(19, 15, -1),
        range(22, 19, -1),
        range(26, 22, -1),
        range(29, 26, -1),
        range(33, 29, -1),
        range(37, 33, -1),
        range(41, 37, -1),
        range(48, 41, -1),
        range(52, 48, -1),
        range(56, 52, -1),
        range(60, 56, -1),
        range(64, 60, -1),
        range(68, 64, -1),
        range(72, 68, -1),
        range(76, 72, -1),
        range(80, 76, -1),
        range(84, 80, -1),
        range(88, 84, -1),
        range(92, 88, -1),
        range(96, 92, -1),
        range(100, 96, -1),
        range(104, 100, -1),
        range(108, 104, -1),
        range(112, 108, -1),
        range(116, 112, -1),
        range(120, 116, -1),
        range(124, 120, -1),
        range(128, 124, -1),
        range(132, 128, -1),
        range(136, 132, -1),
        range(137, 136, -1),
        range(138, 137, -1)],
    'features_ordered_by_length' : [[0, 19, 48, 80, 112],
        [1, 22, 52, 84, 116],
        [2, 24, 54, 86, 118],
        [3, 25, 55, 87, 119],
        [4, 26, 56, 88, 120],
        [5, 29, 60, 92, 124],
        [6, 31, 62, 94, 126],
        [7, 32, 63, 95, 127],
        [8, 33, 64, 96, 128],
        [9, 35, 66, 98, 130],
        [10, 36, 67, 99, 131],
        [11, 37, 68, 100, 132],
        [12, 38, 69, 101, 133],
        [13, 39, 70, 102, 134],
        [14, 40, 71, 103, 135],
        [15, 41, 72, 104, 136],
        [16, 44, 76, 108],
        [17, 46, 78, 110],
        [18, 47, 79, 111],
        [20, 50, 82, 114],
        [21, 51, 83, 115],
        [23, 53, 85, 117],
        [27, 58, 90, 122],
        [28, 59, 91, 123],
        [30, 61, 93, 125],
        [34, 65, 97, 129],
        [42, 74, 106],
        [43, 75, 107],
        [45, 77, 109],
        [49, 81, 113],
        [57, 89, 121],
        [73, 105],
        [137],
        [138]],
    'default_vectors' : pd.DataFrame({ 'Vector': [[14, 12, 10, 8, 8, 10, 8, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            18, 16, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            20, 20, 18, 18, 16, 16, 14, 14, 14, 14, 12, 12, 10, 10, 8, 8, 12, 12, 10, 10, 8, 8, 6, 6, 6, 6, 4, 4, 2, 2, 0, 0,
            0, 0],
         [30, 25, 21, 18, 18, 19, 15, 12, 12, 10, 7, 7, 3, 3, 0, 0, 
            37, 33, 30, 30, 28, 25, 25, 21, 21, 18, 18, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            40, 40, 37, 37, 33, 33, 30, 30, 28, 28, 25, 25, 21, 21, 18, 18, 22, 22, 19, 19, 15, 15, 12, 12, 10, 10, 7, 7, 3, 3, 0, 0, 
            0, 0],
        [22, 18, 15, 14, 13, 14, 11, 10, 9, 5, 5, 4, 2, 1, 0, 0, 
            28, 25, 24, 23, 21, 20, 19, 17, 16, 14, 13, 17, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 2, 1, 0, 0, 
            31, 30, 29, 27, 26, 24, 23, 23, 21, 20, 19, 17, 16, 15, 13, 19, 18, 16, 15, 13, 12, 10, 9, 8, 7, 6, 5, 3, 2, 0, 0, 
            34, 33, 31, 30, 28, 27, 25, 24, 24, 23, 21, 20, 18, 17, 15, 14, 19, 19, 17, 16, 14, 13, 11, 10, 9, 8, 7, 5, 3, 2, 0, 0, 
            34, 33, 31, 30, 28, 27, 25, 24, 24, 23, 21, 20, 18, 17, 15, 14, 19, 19, 17, 16, 14, 13, 11, 10, 9, 8, 7, 5, 3, 2, 0, 0, 
            0, 0],
        [10, 8, 7, 6, 6, 6, 5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 
            12, 11, 10, 10, 9, 8, 8, 7, 7, 6, 6, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            13, 13, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1, 0, 0, 
            0, 0]
        ],
        'Classification_threshold': [50, 100, 75, 32],
        'Vul_threshold': 0,
        'Nv_threshold': 0,
        'Accuracy': 0.0,
        'Expectation': 0.0 }, index=['Work',
            'Woolsey',
            'Kleinman',
            'Schenken'])
        }
    
    }
